{/* Events Tab */}
<TabsContent value="events">
  <div className="flex justify-between items-center mb-4">
    <h2 className="text-xl font-heading font-semibold">Farm Events</h2>
    <Button 
      className="flex items-center" 
      onClick={() => {
        setEditingEvent(null);
        setEventFormOpen(true);
      }}
    >
      <PlusCircle className="w-4 h-4 mr-2" />
      Add New Event
    </Button>
  </div>
  
  <Card>
    <CardContent className="pt-6">
      {isLoadingEvents ? (
        <div className="flex justify-center items-center py-12">
          <Loader2 className="w-8 h-8 animate-spin text-primary" />
        </div>
      ) : events.length === 0 ? (
        <div className="text-center py-12">
          <Calendar className="w-12 h-12 text-neutral-300 mx-auto mb-4" />
          <h3 className="text-lg font-medium text-neutral-600">No events scheduled</h3>
          <p className="text-neutral-500 mt-1">Add your first event to get started</p>
        </div>
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {events.map((event: any) => {
            const eventDate = new Date(event.eventDate);
            const formattedDate = eventDate.toLocaleDateString('en-US', {
              weekday: 'long',
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            });
            
            return (
              <Card key={event.id} className="overflow-hidden">
                {event.imageUrl && (
                  <div className="h-40 overflow-hidden">
                    <img 
                      src={event.imageUrl} 
                      alt={event.title}
                      className="w-full h-full object-cover"
                    />
                  </div>
                )}
                <CardContent className="pt-6">
                  <div className="flex justify-between items-start mb-2">
                    <h3 className="font-heading font-semibold text-lg">{event.title}</h3>
                    <EventCategoryBadge category={event.category} />
                  </div>
                  
                  <div className="space-y-2 mt-3 text-sm text-neutral-600">
                    <div className="flex items-center">
                      <Calendar className="w-4 h-4 mr-2 text-primary" />
                      {formattedDate}
                    </div>
                    <div className="flex items-center">
                      <Clock className="w-4 h-4 mr-2 text-primary" />
                      {event.startTime} - {event.endTime}
                    </div>
                    <div className="flex items-center">
                      <MapPin className="w-4 h-4 mr-2 text-primary" />
                      {event.location}
                    </div>
                  </div>
                  
                  {event.description && (
                    <p className="text-neutral-600 text-sm mt-3 line-clamp-3">
                      {event.description}
                    </p>
                  )}
                  
                  <div className="flex justify-end space-x-2 mt-4">
                    <Button 
                      variant="outline" 
                      size="sm"
                      className="flex items-center"
                      onClick={() => {
                        setEditingEvent(event);
                        setEventFormOpen(true);
                      }}
                    >
                      <FileEdit className="h-3.5 w-3.5 mr-1" />
                      Edit
                    </Button>
                    <Button 
                      variant="outline" 
                      size="sm"
                      className="flex items-center text-red-600 hover:text-red-700"
                      onClick={() => handleDeleteEvent(event.id)}
                    >
                      <Trash2 className="h-3.5 w-3.5 mr-1" />
                      Delete
                    </Button>
                  </div>
                </CardContent>
              </Card>
            );
          })}
        </div>
      )}
    </CardContent>
  </Card>
</TabsContent>
